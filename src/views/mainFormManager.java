/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import Email.sendEmail;
import controllers.EmployeeController;
import controllers.EmployeeControllerInterface;
import controllers.OvertimeController;
import controllers.OvertimeControllerInterface;
import entities.Overtime;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.hibernate.Hibernate;
import org.hibernate.SessionFactory;
import tools.Datas;
import tools.HibernateUtil;

/**
 *
 * @author Mukhlish
 */
public class mainFormManager extends javax.swing.JFrame {

    SessionFactory factory = HibernateUtil.getSessionFactory();
    OvertimeControllerInterface oci = new OvertimeController(factory);
    EmployeeControllerInterface eci = new EmployeeController(factory);

    /**
     * Creates new form mainFormManager
     */
    public mainFormManager() {
        initComponents();
        DashboardManager.setVisible(true);
        OTRequest.setVisible(false);
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();

        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;

        this.setLocation(x, y);

        BindingOvertime(oci.search(txtSearch.getText()));

        txtNIK.setEditable(false);
        txtName.setEditable(false);
        txtFee.setEditable(false);
        txtDuration.setEditable(false);

        txtNIK1.setText(Datas.getNik());
        txtName1.setText(Datas.getName());
        txtEmail1.setText(Datas.getemail());
        txtPhone1.setText(Datas.getNotelp());
        txtDate1.setText(Datas.getHire_date());
        txtJob1.setText(Datas.geteJob_title());
//        txt.setText(Datas.getSalary());
        txtStatus1.setText(Datas.getStatus());
        txtManager1.setText(Datas.getManager_id());

        txtNIK1.setEditable(false);
        txtName1.setEditable(false);
        txtEmail1.setEditable(false);
        txtManager1.setEditable(false);
        txtPhone1.setEditable(false);
        txtManager1.setEditable(false);
        txtStatus1.setEditable(false);
        txtDate1.setEditable(false);
        txtJob1.setEditable(false);
        txtPass1.setEditable(false);
    }

    public void BindingOvertime(List<Object> overtimes) {
        Object[] header = {"No", "Overtime_Id", "Name", "NIK", "Duration", "Fee", "Status", "Timesheet"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tblOvertime.setModel(data);
        int number = 1;

        try {
            for (Object overtime : overtimes) {
                Overtime o = (Overtime) overtime;
                String Number = String.valueOf(number);
                String Isi1 = String.valueOf(o.getOvertimeId());
                String Isi2 = String.valueOf(o.getNik().getName());
                String Isi3 = String.valueOf(o.getNik().getNik());
                String Isi4 = String.valueOf(o.getOtDuration());
                String Isi5 = String.valueOf(o.getFee());
                String status = String.valueOf(o.getStatus());
                if (status.matches("0")) {
                    status = "request";
                } else if (status.matches("1")) {
                    status = "Approved";
                } else if (status.matches("2")) {
                    status = "rejected";
                }
                String Isi6 = status;
                String Isi7 = String.valueOf(o.getTsFile());

                String kolom[] = {Number, Isi1, Isi2, Isi3, Isi4, Isi5, Isi6, Isi7};
                number++;
                data.addRow(kolom);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ckck" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        DashboardManager = new javax.swing.JPanel();
        txtNIK1 = new javax.swing.JTextField();
        txtName1 = new javax.swing.JTextField();
        txtPass1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail1 = new javax.swing.JTextField();
        txtPhone1 = new javax.swing.JTextField();
        txtDate1 = new javax.swing.JTextField();
        txtJob1 = new javax.swing.JTextField();
        txtStatus1 = new javax.swing.JTextField();
        txtManager1 = new javax.swing.JTextField();
        btnEditProfile = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        OTRequest = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOvertime = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNIK = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbApprove = new javax.swing.JComboBox<>();
        btnSaveApprove = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFee = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        managerDash = new javax.swing.JMenu();
        reqOT = new javax.swing.JMenu();
        LogOutManager = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.CardLayout());

        txtNIK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNIK1ActionPerformed(evt);
            }
        });

        txtPass1.setText("jPasswordField1");

        jLabel9.setText("Change password");

        btnEditProfile.setText("Edit Profile");
        btnEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfileActionPerformed(evt);
            }
        });

        jLabel8.setText("Manger                   :");

        jLabel7.setText("Status                    :");

        jLabel13.setText("Job Title                 : ");

        jLabel14.setText("Hire date                : ");

        jLabel15.setText("Phone Number      :");

        jLabel16.setText("Email                       :");

        jLabel12.setText("Password               :     ");

        jLabel17.setText("Name                      :");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("NIK                         :");

        javax.swing.GroupLayout DashboardManagerLayout = new javax.swing.GroupLayout(DashboardManager);
        DashboardManager.setLayout(DashboardManagerLayout);
        DashboardManagerLayout.setHorizontalGroup(
            DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardManagerLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addGap(34, 34, 34)
                .addGroup(DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtNIK1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtName1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPhone1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDate1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtJob1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtStatus1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPass1)
                        .addComponent(txtManager1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnEditProfile)
                        .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(493, Short.MAX_VALUE))
        );
        DashboardManagerLayout.setVerticalGroup(
            DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardManagerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(DashboardManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardManagerLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel18)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel17)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel12)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel16)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel15)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel14)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel13)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel7)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardManagerLayout.createSequentialGroup()
                        .addComponent(txtNIK1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7)
                        .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtJob1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtManager1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditProfile)
                        .addGap(7, 7, 7))))
        );

        jPanel1.add(DashboardManager, "card2");

        tblOvertime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblOvertime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOvertimeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOvertime);

        jLabel1.setText("NIK");

        jLabel2.setText("Name");

        jLabel3.setText("Duration");

        jLabel4.setText("Status");

        cmbApprove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Approve", "Reject" }));

        btnSaveApprove.setText("Save");
        btnSaveApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveApproveMouseClicked(evt);
            }
        });

        jLabel5.setText("view Report");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setText("Fee");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout OTRequestLayout = new javax.swing.GroupLayout(OTRequest);
        OTRequest.setLayout(OTRequestLayout);
        OTRequestLayout.setHorizontalGroup(
            OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OTRequestLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(46, 46, 46)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName)
                            .addComponent(txtNIK)))
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDuration)
                            .addGroup(OTRequestLayout.createSequentialGroup()
                                .addComponent(cmbApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnSaveApprove)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtFee))))
                .addGap(18, 18, 18)
                .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OTRequestLayout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        OTRequestLayout.setVerticalGroup(
            OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OTRequestLayout.createSequentialGroup()
                .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OTRequestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OTRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbApprove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaveApprove)))
                    .addGroup(OTRequestLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(OTRequest, "card3");

        managerDash.setText("Dashboard");
        managerDash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managerDashMouseClicked(evt);
            }
        });
        jMenuBar1.add(managerDash);

        reqOT.setText("Overtime Req");
        reqOT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reqOTMouseClicked(evt);
            }
        });
        jMenuBar1.add(reqOT);

        LogOutManager.setText("Log Out");
        LogOutManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOutManagerMouseClicked(evt);
            }
        });
        jMenuBar1.add(LogOutManager);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 947, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void managerDashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managerDashMouseClicked
        DashboardManager.setVisible(true);
        OTRequest.setVisible(false);
        BindingOvertime(oci.search(txtSearch.getText()));
    }//GEN-LAST:event_managerDashMouseClicked

    private void reqOTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reqOTMouseClicked
        DashboardManager.setVisible(false);
        OTRequest.setVisible(true);
        BindingOvertime(oci.search(txtSearch.getText()));
    }//GEN-LAST:event_reqOTMouseClicked

    private void LogOutManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutManagerMouseClicked
        int dialogButton = 0;
        int dialog = JOptionPane.showConfirmDialog(null, "Apakah anda ingin Logout ?", "Warning", dialogButton);
        if (dialog == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            LoginForm loginForm = new LoginForm();
            loginForm.show();
        } else {
        }
    }//GEN-LAST:event_LogOutManagerMouseClicked

    private void btnSaveApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveApproveMouseClicked
        String approve = (String) cmbApprove.getSelectedItem();
        if (approve.matches("Approve")) {
            approve = "1";
            sendEmail email = new sendEmail();
            email.sent(true);
        } else if (approve.matches("Reject")) {
            approve = "2";
            sendEmail email = new sendEmail();
            email.sent(false);
        }

        int i = tblOvertime.getSelectedRow();
        TableModel model = tblOvertime.getModel();
        String OVERTIME_ID = model.getValueAt(i, 1).toString();
        Object el = oci.getById(OVERTIME_ID);
        Overtime o = (Overtime) el;
        String NIK = txtNIK.getText();
        String PRESENCE_ID = String.valueOf(o.getPresenceId().getPresenceId());
        String OT_DURATION = txtDuration.getText();
        String FEE = txtFee.getText();
        String STATUS = String.valueOf(o.getStatus());
        String TS_FILE = String.valueOf(o.getTsFile());
        //     System.out.println(OVERTIME_ID + OT_DURATION + FEE + approve + TS_FILE + NIK + PRESENCE_ID);
        if (oci.update(OVERTIME_ID, NIK, PRESENCE_ID, OT_DURATION, FEE, approve, TS_FILE)) {
            JOptionPane.showMessageDialog(null, "updated");
            BindingOvertime(oci.search(txtSearch.getText()));
//            sendEmail email = new sendEmail();
//            email.sent(true);
        } else {
            JOptionPane.showMessageDialog(null, "failed");
//            sendEmail email = new sendEmail();
//            email.sent(false);
        }
    }//GEN-LAST:event_btnSaveApproveMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        String filename = "E:\\KERJA\\Project\\TugasOvertime-master\\src\\report\\overtime.jasper";
        String filetofill = "E:\\KERJA\\Project\\TugasOvertime-master\\src\\report\\overtime.jrxml";
        reportForm form = new reportForm(filename, filetofill);
        form.show();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void tblOvertimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOvertimeMouseClicked
        int i = tblOvertime.getSelectedRow();
        TableModel model = tblOvertime.getModel();
        txtName.setText(model.getValueAt(i, 3).toString());
        txtNIK.setText(model.getValueAt(i, 3).toString());
        Overtime overtime = (Overtime) oci.getById((String) model.getValueAt(i, 1));
        String present = String.valueOf(overtime.getPresenceId().getPresenceId());
        txtDuration.setText(model.getValueAt(i, 4).toString());
        txtFee.setText(model.getValueAt(i, 5).toString());

        String status = model.getValueAt(i, 6).toString();
        System.out.println(status);
        if (status.matches("request")) {
            cmbApprove.setEnabled(true);
            btnSaveApprove.setEnabled(true);
        } else if (status.matches("Approved")) {
            cmbApprove.setEnabled(false);
            btnSaveApprove.setEnabled(false);
        } else if (status.matches("rejected")) {
            cmbApprove.setEnabled(false);
            btnSaveApprove.setEnabled(false);
        }
    }//GEN-LAST:event_tblOvertimeMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        BindingOvertime(oci.search(txtSearch.getText()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtNIK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNIK1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNIK1ActionPerformed

    private void btnEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfileActionPerformed
        if (btnEditProfile.isSelected()) {
            txtNIK1.setEditable(false);
            txtName1.setEditable(false);
            txtEmail1.setEditable(true);
            txtManager1.setEditable(false);
            txtPhone1.setEditable(true);
            txtStatus1.setEditable(false);
            txtDate1.setEditable(false);
            txtJob1.setEditable(false);
            txtPass1.setEditable(false);

            btnEditProfile.setText("Save");
        } else {
            String NIK = Datas.getNik();
            String Name = Datas.getName();
            String email = txtEmail1.getText();
            String Password = Datas.getPassword();
            String Phone = txtPhone1.getText();
            String hireDate = txtDate1.getText();
            String Job = Datas.geteJob_title();
            String Status = Datas.getStatus();
            String Manager = Datas.getManager_id();
            String Salary = Datas.getSalary();
            String isDel = Datas.getIsDelete();


            if (!email.equals("") && !Phone.equals("")) {
                if (eci.update(Name, email, Password, Phone, hireDate, Job, Salary, Manager, Status, isDel, NIK)) {
                    JOptionPane.showMessageDialog(null, "insert berhasil");

                } else {
                    JOptionPane.showMessageDialog(null, "insert gagal");
                }

            } else {
                JOptionPane.showMessageDialog(null, "form input tidak boleh kosong");
            }
            txtNIK1.setEditable(false);
            txtName1.setEditable(false);
            txtEmail1.setEditable(false);
            txtManager1.setEditable(false);
            txtPhone1.setEditable(false);
            txtManager1.setEditable(false);
            txtStatus1.setEditable(false);
            txtDate1.setEditable(false);
            txtJob1.setEditable(false);
            txtPass1.setEditable(false);
            btnEditProfile.setText("Edit Profile");
        }
    }//GEN-LAST:event_btnEditProfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFormManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFormManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFormManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFormManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFormManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DashboardManager;
    private javax.swing.JMenu LogOutManager;
    private javax.swing.JPanel OTRequest;
    private javax.swing.JToggleButton btnEditProfile;
    private javax.swing.JButton btnSaveApprove;
    private javax.swing.JComboBox<String> cmbApprove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu managerDash;
    private javax.swing.JMenu reqOT;
    private javax.swing.JTable tblOvertime;
    private javax.swing.JTextField txtDate1;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtFee;
    private javax.swing.JTextField txtJob1;
    private javax.swing.JTextField txtManager1;
    private javax.swing.JTextField txtNIK;
    private javax.swing.JTextField txtNIK1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtPhone1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStatus1;
    // End of variables declaration//GEN-END:variables
}
